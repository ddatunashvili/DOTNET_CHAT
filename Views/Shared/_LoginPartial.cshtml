@using Microsoft.AspNetCore.Identity
@inject SignInManager<ChatApp.Models.ApplicationUser> SignInManager
@inject UserManager<ChatApp.Models.ApplicationUser> UserManager

<ul class="navbar-nav ms-auto d-flex align-items-center gap-2">
    @if (SignInManager.IsSignedIn(User))
    {
        var currentUser = await UserManager.GetUserAsync(User);

        <li class="nav-item">
            <span class="nav-link text-light d-flex align-items-center">
                👋 <span class="ms-1">Hello, <strong>@(currentUser?.DisplayName ?? User.Identity?.Name)</strong></span>
            </span>
        </li>
        <li class="nav-item">
            <form asp-area="Identity" asp-page="/Account/Logout"
                  asp-route-returnUrl="@Url.Action("Index", "Chat")" class="d-inline">
                <button type="submit" class="btn btn-outline-light btn-sm">
                    Logout
                </button>
            </form>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="btn btn-outline-light btn-sm" asp-area="Identity" asp-page="/Account/Register">
                Register
            </a>
        </li>
        <li class="nav-item">
            <a class="btn btn-light text-dark btn-sm" asp-area="Identity" asp-page="/Account/Login">
                Login
            </a>
        </li>
    }
</ul>
